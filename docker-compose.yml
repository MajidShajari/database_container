services:
    pgsql:
        image: postgres:17.5
        container_name: PostgreSQL
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data
        volumes:
            - pgsql_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - db_net
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: PgAdmin
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
            PGADMIN_LISTEN_PORT: 80
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        expose:
            - '80' # فقط داخل شبکه
        depends_on:
            - pgsql
        networks:
            - db_net
            - npm_net

    mongo:
        image: mongo:8.0.12
        container_name: MongoDB
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
            MONGO_INITDB_DATABASE: ${MONGO_DB}
        volumes:
            - mongo_data:/data/db
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    "mongosh --eval 'db.adminCommand({ ping: 1 })' -u ${MONGO_ROOT_USER} -p ${MONGO_ROOT_PASS} --authenticationDatabase admin || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - db_net

    mongo-express:
        image: mongo-express:latest
        container_name: MongoDB-Express
        restart: unless-stopped
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_BASICAUTH_USERNAME: ${ME_BASIC_USER}
            ME_CONFIG_BASICAUTH_PASSWORD: ${ME_BASIC_PASS}
        expose:
            - '8081'
        depends_on:
            - mongo
        networks:
            - db_net
            - npm_net

volumes:
    pgsql_data:
        name: pgsql_data
    pgadmin_data:
        name: pgadmin_data
    mongo_data:
        name: mongo_data

networks:
    npm_net:
        name: npm_net
        external: true
    db_net:
        name: db_net
